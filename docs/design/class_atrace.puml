@startuml

class AtraceApp {
  - enableCoreServices : bool
  - g_traceOverwrite : bool
  - g_traceDurationSeconds : int
  - g_traceBufferSizeKB : int
  - g_compress : bool
  - g_nohup : bool
  - g_initialSleepSecs : int
  - g_kernelTraceFuncs : string
  - g_outputFile : string
  - g_traceAborted : bool
  - async : bool
  - traceStart : bool
  - traceStop : bool
  - traceDump : bool
  - traceStream : bool
  - errstream : FILE *
  - outstream : FILE *
  - m_KernelCategories: vector<string>
  - m_AndroidCategories: vector<string>
  - m_Functions: vector<string>
  - m_Apps: vector<string>
  --
  + handleSignal(): void
  + enable_trace_overwrite(): void
  + enable_streaming(): void
  + enable_compression(): void
  + nosignals(): void
  + add_android_category(const char * id): void
  + add_kernel_category(const char * id): void
  + addApp(const char * appname): void
  + addFunction(const char * function): void
  + run(): bool
  - setUpTrace(): bool 
  - cleanUpTrace(): void 
  - startTrace(): bool 
  - stopTrace(): void 
  - streamTrace(): void 
  - dumpTrace(): void 
}

AtraceApp "-androidsystem" *-->"1" AndroidSystem
AtraceApp "-kernelsystem" *-->"1" KernelSystem

interface KernelSystem {

  + {abstract} writeClockSyncMarker(): bool 
  + {abstract} setTraceOverwriteEnable(bool enable): bool
  + {abstract} setTracingEnabled(bool enable): bool
  + {abstract} clearTrace(): bool
  + {abstract} getTracePipeFd(): int
  + {abstract} getTraceFd(): int
  + {abstract} try_openToWriteOrCreate(const char * filename): int
  + {abstract} try_sendfile(int fd_from, int fd_to): bool
  + {abstract} try_send(int fd_from, int fd_to): bool
  + {abstract} setTraceBufferSizeKB(int size): bool
  + {abstract} setGlobalClockEnable(bool enable): bool
  + {abstract} setPrintTgidEnableIfPresent(bool enable): bool
  + {abstract} setKernelTraceFuncs(const vector<string> & funcs): bool
  + {abstract} isCategorySupported(const TracingCategory& category): bool 
  + {abstract} disableKernelTraceEvents(): bool 
  + {abstract} enableKernelTraceEvents(const vector<string> & ids): bool
  + {abstract} getCategories() const: const vector<TracingCategory> &
}
hide KernelSystem fields

interface AndroidSystem {
  + {abstract} has_core_services() const: bool
  + {abstract} getCategories() const: const std::vector<TracingCategory> &
  + {abstract} tryEnableCategories(std::vector<std::string> categories): bool
  + {abstract} disableAllCategories(): void
  + {abstract} property_get_core_service_names(std::string & content) const: void
  + {abstract} setAppCmdlineProperty(const vector<string> & apps): bool
  + {abstract} pokeBinderServices(): bool
  + {abstract} clearAppProperties(): void
  + {abstract} compress_trace_to(int traceFD, int outFd): void
  + {abstract} log_dumping_trace(): void
}
hide AndroidSystem fields

interface SystemTime {
  + {abstract} get_monotonic() const: float
  + {abstract} get_realtime() const: int64_t
}
hide SystemTime fields

class TracingCategory {
  + name: const char *
  + longname: const char *
  + tags: uint64_t
  + is_enabled: bool
}
hide TracingCategory methods

TracingCategory "-files" --> "1..*" EnableFile

class EnableFile {
  + path: const char *
  + is_required: bool
}
hide EnableFile methods

class KernelSystemImpl {
  - errstream: FILE
  - k_traceClockPath: const char *
  - k_traceBufferSizePath: const char *
  - k_tracingOverwriteEnablePath: const char *
  - k_currentTracerPath: const char *
  - k_printTgidPath: const char *
  - k_funcgraphAbsTimePath: const char *
  - k_funcgraphCpuPath: const char *
  - k_funcgraphProcPath: const char *
  - k_funcgraphFlatPath: const char *
  - k_ftraceFilterPath: const char *
  - k_tracingOnPath: const char *
  - k_tracePath: const char *
  - k_traceStreamPath: const char *
  - k_traceMarkerPath: const char *
  --
  + add_kernel_category(const char * id, const char * name, const std::vector<EnableFile> &sysfiles): void
  - setKernelOptionEnable(const char* filename, bool enable): bool
  - isPossibleSetKernelOption(const char * filename): bool
  - isCategorySupportedForRoot(const TracingCategory& category): bool
  - isTraceClock(const char * mode): bool
  - verifyKernelTraceFuncs(const vector<string> & funcs): bool
  - writeMarker(const char * buffer): bool
}

KernelSystemImpl ..> KernelSystem
KernelSystemImpl "-file_system" --> "1" FileSystem
KernelSystemImpl "-toolbox" --> "1" Toolbox
KernelSystemImpl "-systime" *-->"1" SystemTime
KernelSystemImpl "-m_Categories " -->"0..*" TracingCategory

interface FileSystem {
  + {abstract} fileExists(const char* filename): bool
  + {abstract} fileIsWritable(const char* filename): bool
  + {abstract} truncateFile(const char* path): bool
  + {abstract} writeStr(const char* filename, const char* str): bool
  + {abstract} appendStr(const char* filename, const char* str): bool
}
hide FileSystem fields

class FileSystemImpl {
  - errstream: FILE
  --
  - _writeStr(const char* filename, const char* str, int flags): bool
}

FileSystemImpl ..> FileSystem

class AndroidSystemImpl {
  - errstream: FILE
  - k_traceTagsProperty: const char *
  - k_coreServicesProp: const char *
  - k_traceAppsNumberProperty: const char *
  - k_traceAppsPropertyTemplate: const char *
  --
  + add_category(const char * id, const char * name, uint64_t atrace_tag): void
  - setTagsProperty(uint64_t tags): bool
}

AndroidSystemImpl ..> AndroidSystem
AndroidSystemImpl "-categories" -- "0..*" TracingCategory

class SystemTimeImpl {
}
hide SystemTimeImpl methods
hide SystemTimeImpl fields

SystemTimeImpl ..> SystemTime

interface Toolbox {
  + {abstract} parseFileToTokens(const char* filename, const char* delims, set<string> & tokens)
  + {abstract} parseToTokens(const char* delimsepstr, const char* delims, set<string> & tokens)
}
hide Toolbox fields

class AndroidToolbox {
}
hide AndroidToolbox fields
hide AndroidToolbox methods

AndroidToolbox ..> Toolbox

@enduml